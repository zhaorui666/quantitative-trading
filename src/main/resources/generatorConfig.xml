<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置 tableName,使用 Run As Maven build 生成 dao 层 -->
<generatorConfiguration>
    <!--数据库驱动包路径 -->
    <classPathEntry location="F:/project/springboot-test/src/main/resources/mysql-connector-java-8.0.21.jar"/>

    <!-- flat表示为每一张表只生成一个实体类。这个实体类包含表中的所有字段-->
    <context id="MysqlTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true"/>

        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8"/>

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>

        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!-- 注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="false"/> <!-- 是否生成注释代时间戳-->
        </commentGenerator>

        <!-- jdbc连接-->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/test?useSSL=false" userId="root"
                        password="123456"/>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="com.example.pojo" targetProject="src/main/java">
            <!-- 是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值去掉前后空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成map.xml文件存放地址 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成接口dao -->
        <javaClientGenerator targetPackage="com.example.mapper" targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件
                enableSelectByPrimaryKey相应的配置表示是否生成相应的接口 -->
        <!--<table schema="" tableName="stock_code" domainObjectName="StcokCode"-->
               <!--enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"-->
               <!--enableUpdateByExample="false" selectByExampleQueryId="false">-->
            <!--&lt;!&ndash;是否使用实际列名,默认为false&ndash;&gt;-->
            <!--&lt;!&ndash;<property name="useActualColumnNames" value="false" />&ndash;&gt;-->
        <!--</table>-->
        <!--<table schema="" tableName="stock_market" domainObjectName="StcokMarket"-->
               <!--enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"-->
               <!--enableUpdateByExample="false" selectByExampleQueryId="false">-->
            <!--&lt;!&ndash;是否使用实际列名,默认为false&ndash;&gt;-->
            <!--&lt;!&ndash;<property name="useActualColumnNames" value="false" />&ndash;&gt;-->
        <!--</table>-->

        <table schema="" tableName="stock_fina_sta" domainObjectName="StockFinaSta"
               enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <!--是否使用实际列名,默认为false-->
            <!--<property name="useActualColumnNames" value="false" />-->
        </table>

    </context>
</generatorConfiguration>